import discord
import os
import requests
import re
from bs4 import BeautifulSoup
from urllib.parse import urlparse
from io import BytesIO
from anthropic import Anthropic

TOKEN = os.getenv("DISCORD_BOT_TOKEN")
ANTHROPIC_API_KEY = os.getenv("ANTHROPIC_API_KEY")

intents = discord.Intents.default()
intents.message_content = True
client = discord.Client(intents=intents)
anthropic = Anthropic(api_key=ANTHROPIC_API_KEY)

def extract_content(url):
    try:
        headers = {"User-Agent": "Mozilla/5.0"}
        r = requests.get(url, headers=headers, timeout=10)
        soup = BeautifulSoup(r.text, "html.parser")
        
        title = soup.find("meta", property="og:title")
        if not title:
            title = soup.find("title")
            
        image = soup.find("meta", property="og:image")
        
        article_text = ""
        article = soup.find('article') or soup.find(class_=re.compile('article|content|post|story'))
        
        if article:
            paragraphs = article.find_all('p')
            article_text = ' '.join([p.text for p in paragraphs])
        else:
            paragraphs = soup.find_all('p')
            article_text = ' '.join([p.text for p in paragraphs])
        
        return {
            "title": title["content"] if title and hasattr(title, "content") else (title.text if title else "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"),
            "image_url": image["content"] if image else None,
            "text": article_text,
        }
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
        return {
            "title": "–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞", 
            "image_url": None,
            "text": "",
        }

def translate_accurately(text):
    if not text:
        return ""
    
    prompt = f"–ü–µ—Ä–µ–≤–µ–¥–∏ —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω–æ –∏ —è—Å–Ω–æ:\n\n{text}"
    response = anthropic.messages.create(
        model="claude-3-7-sonnet-20250219",
        max_tokens=600,
        temperature=0.3,
        messages=[{"role": "user", "content": prompt}]
    )
    return response.content[0].text.strip()

def is_english(text):
    english_words = ['the', 'and', 'is', 'in', 'it', 'to', 'of', 'for', 'with', 'on']
    text_lower = text.lower()
    english_count = sum(1 for word in english_words if f" {word} " in text_lower)
    return english_count >= 3

def story_rewrite(text):
    prompt = f"""–¢—ã ‚Äî –º–æ–ª–æ–¥–∞—è, –æ—Å—Ç—Ä–∞—è, –¥–µ—Ä–∑–∫–∞—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∫–∞ Telegram-–∫–∞–Ω–∞–ª–∞ "–û–°–ö–û–õ–ö–ò –ì–õ–Ø–ù–¶–ê".
–¢–µ–±–µ 21, —É —Ç–µ–±—è —è–∑–≤–∏—Ç–µ–ª—å–Ω—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–æ–¥–Ω—É—é –∏–Ω–¥—É—Å—Ç—Ä–∏—é –∏ –≥–ª—è–Ω–µ—Ü.

–ü–µ—Ä–µ–ø–∏—à–∏ —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –ª–∏—á–Ω—ã–π, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ—Å—Ç –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –±—É–¥—Ç–æ –¥–µ–ª–∏—à—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏:
1. –ù–∞—á–Ω–∏ —Å –æ–±—Ä–∞—â–µ–Ω–∏—è "–†–µ–±—è—Ç" –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –º–æ–ª–æ–¥–µ–∂–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è
2. –ò—Å–ø–æ–ª—å–∑—É–π –º–µ–∂–¥–æ–º–µ—Ç–∏—è, –≤–æ—Å–∫–ª–∏—Ü–∞–Ω–∏—è, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏
3. –î–æ–±–∞–≤—å –ª–∏—á–Ω—ã–π, –ø–æ—á—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫–æ–≤—ã–π —Å—Ç–∏–ª—å —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π —Ä–µ—á–∏
4. –í–∫–ª—é—á–∏ –æ—Å—Ç—Ä—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –æ –∫–ª–∞—Å—Å–æ–≤—ã—Ö –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è—Ö –≤ –º–æ–¥–µ
5. –î–æ–±–∞–≤—å –º–µ—Ç–∞—Ñ–æ—Ä—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –±–æ–ª—å—é, —Ä–∞—Å—Å–µ—á–µ–Ω–∏–µ–º, —Ö–æ–ª–æ–¥–æ–º
6. –ü–µ—Ä–µ–¥–∞–π —á—É–≤—Å—Ç–≤–æ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–∞ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è –∑–∞ –∞–±—Å—É—Ä–¥–Ω–æ—Å—Ç—å—é –º–æ–¥–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏
7. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ—Ä–æ—Ç–∫–∏–µ, —Ä—É–±–ª–µ–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è
8. –ú–∞–∫—Å–∏–º—É–º 100 —Å–ª–æ–≤
9. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∂–∏ –∏—Ä–æ–Ω–∏—é –∏ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤–æ—Å—Ç—å –º–æ–¥–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤

–í–æ—Ç —Å—Ç–∏–ª—å, –∫–∞–∫ –Ω—É–∂–Ω–æ –ø—Ä–∏–º–µ—Ä–Ω–æ –ø–∏—Å–∞—Ç—å: "–†–µ–±—è—Ç, –≤—ã –Ω–µ –ø–æ–≤–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—á–µ—Ä–∞ –≤–∏–¥–µ–ª–∞! –¢–∏–º–±–µ—Ä–ª–µ–Ω–¥—ã! –ì—Ä–µ–±–∞–Ω—ã–µ –ñ–ï–õ–¢–´–ï –¢–ò–ú–ë–ï–†–´ –Ω–∞ –ø–∞—Ä–∏–∂—Å–∫–æ–π –Ω–µ–¥–µ–ª–µ –º–æ–¥—ã!
–ù–µ—Ç, —Å–µ—Ä—å–µ–∑–Ω–æ. Louis Vuitton –≤–∑—è–ª —ç—Ç–∏ —Ä–∞–±–æ—á–∏–µ –±–æ—Ç–∏–Ω–∫–∏ –∏ —Å–¥–µ–ª–∞–ª –∏–∑ –Ω–∏—Ö –æ–±—ä–µ–∫—Ç –≤–æ–∂–¥–µ–ª–µ–Ω–∏—è. –ë—É–∫–≤–∞–ª—å–Ω–æ —Ç—Ä—è—Å—É—â–∏–º–∏—Å—è —Ä—É–∫–∞–º–∏ –ª–∏—Å—Ç–∞–ª–∞ —Ñ–æ—Ç–∫–∏.
–§–∞—Ä—Ä–µ–ª–ª, —ç—Ç–æ—Ç —Ö–∏—Ç—Ä—ã–π –ª–∏—Å, –ø—Ä–∏—Ç–∞—â–∏–ª —É–ª–∏—á–Ω—É—é —ç—Å—Ç–µ—Ç–∏–∫—É –ø—Ä—è–º–æ –≤ –ª–æ–≥–æ–≤–æ –≥–ª—è–Ω—Ü–∞. –û–±–æ–∂–∞—é, –∫–æ–≥–¥–∞ —á—Ç–æ-—Ç–æ –≥—Ä—É–±–æ–µ –∏ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–∑–∞–µ—Ç—Å—è –≤ —Å—Ç–µ—Ä–∏–ª—å–Ω—ã–π –º–∏—Ä.
–ö–∞–∂–µ—Ç—Å—è, –≤—á–µ—Ä–∞ –µ—â–µ –ª–æ–≤–∏–ª–∞ –Ω–∞ —Å–µ–±–µ —Å–Ω–∏—Å—Ö–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∑–≥–ª—è–¥—ã –∑–∞ —Å–≤–æ–∏ –∂–µ–ª—Ç—ã–µ –±–æ—Ç—ã, –∞ —Å–µ–≥–æ–¥–Ω—è —ç—Ç–æ ‚Äî –≤–µ—Ä—Ö –∏–∑—ã—Å–∫–∞–Ω–Ω–æ—Å—Ç–∏. –ò—Ä–æ–Ω–∏—è –∂–∏–∑–Ω–∏ —Ä–µ–∂–µ—Ç –ø–æ –∂–∏–≤–æ–º—É."

–í–æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª:
{text}"""

    response = anthropic.messages.create(
        model="claude-3-7-sonnet-20250219",
        max_tokens=400,
        temperature=1.0,
        messages=[{"role": "user", "content": prompt}]
    )
    
    rewritten_text = response.content[0].text.strip()
    
    if "#–û—Å–∫–æ–ª–∫–∏–ì–ª—è–Ω—Ü–∞" not in rewritten_text:
        rewritten_text += "\n\n#–û—Å–∫–æ–ª–∫–∏–ì–ª—è–Ω—Ü–∞"
        
    return rewritten_text

def generate_filler_post():
    topics = [
        "fashion", "style", "cinema", "psychology", "music", "art", 
        "feelings", "city", "nostalgia"
    ]
    import random
    topic = random.choice(topics)
    
    prompt = f"–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫–∏–π (–¥–æ 100 —Å–ª–æ–≤) –∞–≤—Ç–æ—Ä—Å–∫–∏–π –ø–æ—Å—Ç –≤ —Å—Ç–∏–ª–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –≥–ª—è–Ω—Ü–µ–≤–æ–≥–æ Telegram-–∫–∞–Ω–∞–ª–∞. –¢–µ–º–∞ ‚Äî {topic}. –ü–æ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∂–∏–≤—ã–º, —É–º–Ω—ã–º, –ª–∏—á–Ω—ã–º –∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–º. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ, –º–∏–∫—Ä–æ–∏—Å—Ç–æ—Ä–∏—è, —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ –∏–ª–∏ –∫—É–ª—å—Ç—É—Ä–Ω–∞—è –æ—Ç—Å—ã–ª–∫–∞. –ë–µ–∑ —Å—Å—ã–ª–æ–∫. –ë–µ–∑ –º–µ–¥–∏–∞. –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç."
    
    response = anthropic.messages.create(
        model="claude-3-7-sonnet-20250219",
        max_tokens=300,
        temperature=0.9,
        messages=[{"role": "user", "content": prompt}]
    )
    
    raw_text = response.content[0].text.strip()
    return story_rewrite(raw_text)

@client.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {client.user}")

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    if message.content.startswith("http"):
        processing_msg = await message.channel.send("üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Å—ã–ª–∫—É...")

        data = extract_content(message.content)
        title = data["title"]
        image_url = data["image_url"]
        text = data["text"]
        
        # –ü–µ—Ä–µ–≤–æ–¥ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if is_english(text):
            await message.channel.send("üåê –¢–µ–∫—Å—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –≤—ã–ø–æ–ª–Ω—è—é –ø–µ—Ä–µ–≤–æ–¥...")
            text = translate_accurately(text)
            title = translate_accurately(title)
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Claude
        glossy_text = story_rewrite(text)

        if image_url:
            try:
                img_data = requests.get(image_url).content
                file = discord.File(BytesIO(img_data), filename="image.jpg")
                await processing_msg.delete()
                await message.channel.send(content=glossy_text, file=file)
                return
            except Exception as e:
                await processing_msg.delete()
                await message.channel.send(f"{glossy_text}\n(–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
                return

        await processing_msg.delete()
        await message.channel.send(glossy_text)
    
    elif message.content.startswith("!—Å—Ç–∏–ª—å "):
        text = message.content[7:]
        glossy_text = story_rewrite(text)
        await message.channel.send(glossy_text)
    
    elif message.content == "!–∂–∏–≤–æ–π":
        await message.channel.send("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∂–∏–≤–æ–π –ø–æ—Å—Ç...")
        filler_text = generate_filler_post()
        await message.channel.send(filler_text)
    
    else:
        await message.channel.send("üìé –ö–∏–Ω—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∞—Ç—å—é, –Ω–∞–ø–∏—à–∏ '!—Å—Ç–∏–ª—å [—Ç–µ–∫—Å—Ç]' –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏, –∏–ª–∏ '!–∂–∏–≤–æ–π' –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∂–∏–≤–æ–≥–æ –ø–æ—Å—Ç–∞.")

client.run(TOKEN)
